@using CashIQ.Enums
@model IEnumerable<Expense>
@{
	ViewBag.Title = "Expenses";
	var viewModel = ViewData["viewModel"] as CashIQ.Models.ExpenseViewModel;
}

@if (Model.Count() > 0 && viewModel != null)
{
	<a asp-action="Create" asp-controller="Expense">create an expense</a>
	<form asp-action="Index">
		<label asp-for="@viewModel.Frequency">Frequency</label>
		<br />
		<select asp-for="@viewModel.Frequency" required>
			@foreach (Frequency freq in Enum.GetValues(typeof(Frequency)))
			{
				<option value="@freq">@freq</option>
			}
		</select>
		<button type="submit">submit</button>
	</form>
	<h1>Total Income: @ViewBag.viewModel.TotalAmount.ToString("C2")</h1>
	<table style="width: 100%;">
		<tr style="width: 100%; background: Lightgrey;">
			<th>Title</th>
			<th>Description</th>
			<th>Amount</th>
			<th>Frequency</th>
			<th></th>
			<th></th>
		</tr>
		@{
			bool rowBgColorSwitch = true;
		}
		@foreach (Expense item in Model)
		{
			<tr style="background: @(rowBgColorSwitch ? "white" : "lightgrey")">
				<td>@item.Title</td>
				<td>@item.Description</td>
				<td>@item.Amount.ToString("C2")</td>
				<td>@item.Frequency</td>
				<td><a asp-action="Edit" asp-controller="Expense" asp-route-id="@item.Id">Edit</a></td>
				<td><a asp-action="Delete" asp-controller="Expense" asp-route-id="@item.Id">Delete</a></td>
			</tr>
			rowBgColorSwitch = !rowBgColorSwitch;
		}
	</table>
}
else
{
	<h1>No data, please click <a asp-action="Create" asp-controller="Expense">here to create an expense</a></h1>
}